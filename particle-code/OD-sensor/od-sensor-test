// This #include statement was automatically added by the Particle IDE.
#include <math.h>

#include <Adafruit_TSL2591.h>

    #include <application.h>
    #include <spark_wiring_i2c.h>
    
    // SHT31 I2C address is 0x44(68)
    #define Addr 0x44   
    
    int IRled = D7; //defines IR LED at pin D7. You can tell it's on if D7 is on.
    
    Adafruit_TSL2591 tsl = Adafruit_TSL2591(2591); // pass in a number for the sensor identifier (for your use later)
    
    /**************************************************************************/
    /*
        Displays some basic information on this sensor from the unified
        sensor API sensor_t type (see Adafruit_Sensor for more information)
    */
    /**************************************************************************/
    void displaySensorDetails(void)
    {
      sensor_t sensor;
      tsl.getSensor(&sensor);
      Serial.println("------------------------------------");
      Serial.print  ("Sensor:       "); Serial.println(sensor.name);
      Serial.print  ("Driver Ver:   "); Serial.println(sensor.version);
      Serial.print  ("Unique ID:    "); Serial.println(sensor.sensor_id);
      Serial.print  ("Max Value:    "); Serial.print(sensor.max_value); Serial.println(" lux");
      Serial.print  ("Min Value:    "); Serial.print(sensor.min_value); Serial.println(" lux");
      Serial.print  ("Resolution:   "); Serial.print(sensor.resolution); Serial.println(" lux");
      Serial.println("------------------------------------");
      Serial.println("");
      delay(500);
    }
    
    /**************************************************************************/
    /*
        Configures the gain and integration time for the TSL2591
    */
    /**************************************************************************/
    void configureSensor(void)
    {
      // You can change the gain on the fly, to adapt to brighter/dimmer light situations
      tsl.setGain(TSL2591_GAIN_LOW);    // 1x gain (bright light)
       //tsl.setGain(TSL2591_GAIN_MED);      // 25x gain
       //tsl.setGain(TSL2591_GAIN_HIGH);   // 428x gain
    
      // Changing the integration time gives you a longer time over which to sense light
      // longer timelines are slower, but are good in very low light situtations!
      tsl.setTiming(TSL2591_INTEGRATIONTIME_100MS);  // shortest integration time (bright light)
      // tsl.setTiming(TSL2591_INTEGRATIONTIME_200MS);
      // tsl.setTiming(TSL2591_INTEGRATIONTIME_300MS);
      // tsl.setTiming(TSL2591_INTEGRATIONTIME_400MS);
      // tsl.setTiming(TSL2591_INTEGRATIONTIME_500MS);
       //tsl.setTiming(TSL2591_INTEGRATIONTIME_600MS);  // longest integration time (dim light)
    
      /* Display the gain and integration time for reference sake */
      Serial.println("------------------------------------");
      Serial.print  ("Gain:         ");
      tsl2591Gain_t gain = tsl.getGain();
      switch(gain)
      {
        case TSL2591_GAIN_LOW:
          Serial.println("1x (Low)");
          break;
        case TSL2591_GAIN_MED:
          Serial.println("25x (Medium)");
          break;
        case TSL2591_GAIN_HIGH:
          Serial.println("428x (High)");
          break;
        case TSL2591_GAIN_MAX:
          Serial.println("9876x (Max)");
          break;
      }
      Serial.print  ("Timing:       ");
      Serial.print((tsl.getTiming() + 1) * 100, DEC);
      Serial.println(" ms");
      Serial.println("------------------------------------");
      Serial.println("");
    }
    
    
    double cTemp = 0.0, fTemp = 0.0, humidity = 0.0, tLux = 0.0;
    
    void setup(void)
    {
    pinMode(IRled,OUTPUT);  //Declares D7 as being used as the variable IRled and turns on
      Serial.begin(9600);
    
      Serial.println("Starting Adafruit TSL2591 Test!");
    
      if (tsl.begin())
      {
        Serial.println("Found a TSL2591 sensor");
      }
      else
      {
        Serial.println("No sensor found ... check your wiring?");
        while (1);
      }
    
      /* Display some basic information on this sensor */
      displaySensorDetails();
    
      /* Configure the sensor */
      configureSensor();
    
    
    
        // Set Particle variables
        Particle.variable("i2cdevice", "SHT31");
        Particle.variable("lux", tLux);
        
        
        // Initialise I2C communication as MASTER 
        Wire.begin();
        // Initialise serial communication, set baud rate = 9600
        Serial.begin(9600);
      
        // Start I2C Transmission
        Wire.beginTransmission(Addr);
        // Send 16-bit command byte          
        Wire.write(0x2C);
        Wire.write(0x06);
        // Stop I2C transmission
        Wire.endTransmission();
        delay(300);
    }
    
    
    
    void advancedRead(void)
    {
      // More advanced data read example. Read 32 bits with top 16 bits IR, bottom 16 bits full spectrum
      // That way you can do whatever math and comparisons you want!
      uint32_t lum = tsl.getFullLuminosity();
      uint16_t ir, full;
      ir = lum >> 16;
      full = lum & 0xFFFF;
      Serial.print("[ "); Serial.print(millis()); Serial.print(" ms ] ");
      Serial.print("IR: "); Serial.print(ir);  Serial.print("  ");
      Serial.print("Full: "); Serial.print(full); Serial.print("  ");
      Serial.print("Visible: "); Serial.print(full - ir); Serial.print("  ");
      Serial.print("Lux: "); Serial.println(tsl.calculateLux(full, ir));
      float tLux = (tsl.calculateLux(full, ir));
    //Particle.publish("Lux: ",  String(tLux));
      delay(500);
      Particle.publish("IR: ", String(ir));
      
      float totlux = 100;  //Total lux value
      float length_cal = 12.4; //Length that the light has to travel
      float per_T = (tsl.calculateLux(full, ir))/(totlux);  //Percentage of transmittance
      float Abs = 2 - log10(per_T);  //Absorbtion of light
      float Conc = Abs/(length_cal);  //Biomass density of sample (mg/ml)
      Particle.publish("Concentration: ", Conc);
      
      //Serial.print(Conc);
      delay(500);
    }
    
    
    
    void loop(void)
    {
    digitalWrite(IRled, HIGH); //turns the IR LED on
      advancedRead();
        delay(2000);

    //    digitalWrite(IRled, LOW); //turns the IR LED off
      advancedRead();

      delay(2000);
    
        unsigned int data[6];
        // Start I2C Transmission
        Wire.beginTransmission(Addr);
        // Stop I2C Transmission
        Wire.endTransmission();
        
        // Request 6 bytes of data from the device
        Wire.requestFrom(Addr,6);
        
        // Read 6 bytes of data
        // temp msb, temp lsb, crc, hum msb, hum lsb, crc
        if(Wire.available() == 6)
        {
            data[0] = Wire.read();
            data[1] = Wire.read();
            data[2] = Wire.read();
            data[3] = Wire.read();
            data[4] = Wire.read();
            data[5] = Wire.read();
        }
        delay(500);
      
        // Convert the data
        // float cTemp = ((((data[0] * 256.0) + data[1]) * 175.72) / 65536.0) - 46.85;
        // float fTemp = (cTemp * 1.8) + 32;
        // float humidity = ((((data[3] * 256.0) + data[4]) * 125) / 65535.0) - 6;
        
        // Output data to dashboard
        //Particle.publish("Temperature in Celsius: ",  String(cTemp));
        //delay(500);
        //Particle.publish("Temperature in Fahrenheit: ", String(fTemp));
        //delay(500);
        //Particle.publish("Relative Humidity: ",  String(humidity));
        //delay(500);
    }
